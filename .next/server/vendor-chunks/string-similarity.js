/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/string-similarity";
exports.ids = ["vendor-chunks/string-similarity"];
exports.modules = {

/***/ "(rsc)/./node_modules/string-similarity/src/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/string-similarity/src/index.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("module.exports = {\n\tcompareTwoStrings:compareTwoStrings,\n\tfindBestMatch:findBestMatch\n};\n\nfunction compareTwoStrings(first, second) {\n\tfirst = first.replace(/\\s+/g, '')\n\tsecond = second.replace(/\\s+/g, '')\n\n\tif (first === second) return 1; // identical or empty\n\tif (first.length < 2 || second.length < 2) return 0; // if either is a 0-letter or 1-letter string\n\n\tlet firstBigrams = new Map();\n\tfor (let i = 0; i < first.length - 1; i++) {\n\t\tconst bigram = first.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram)\n\t\t\t? firstBigrams.get(bigram) + 1\n\t\t\t: 1;\n\n\t\tfirstBigrams.set(bigram, count);\n\t};\n\n\tlet intersectionSize = 0;\n\tfor (let i = 0; i < second.length - 1; i++) {\n\t\tconst bigram = second.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram)\n\t\t\t? firstBigrams.get(bigram)\n\t\t\t: 0;\n\n\t\tif (count > 0) {\n\t\t\tfirstBigrams.set(bigram, count - 1);\n\t\t\tintersectionSize++;\n\t\t}\n\t}\n\n\treturn (2.0 * intersectionSize) / (first.length + second.length - 2);\n}\n\nfunction findBestMatch(mainString, targetStrings) {\n\tif (!areArgsValid(mainString, targetStrings)) throw new Error('Bad arguments: First argument should be a string, second should be an array of strings');\n\t\n\tconst ratings = [];\n\tlet bestMatchIndex = 0;\n\n\tfor (let i = 0; i < targetStrings.length; i++) {\n\t\tconst currentTargetString = targetStrings[i];\n\t\tconst currentRating = compareTwoStrings(mainString, currentTargetString)\n\t\tratings.push({target: currentTargetString, rating: currentRating})\n\t\tif (currentRating > ratings[bestMatchIndex].rating) {\n\t\t\tbestMatchIndex = i\n\t\t}\n\t}\n\t\n\t\n\tconst bestMatch = ratings[bestMatchIndex]\n\t\n\treturn { ratings: ratings, bestMatch: bestMatch, bestMatchIndex: bestMatchIndex };\n}\n\nfunction areArgsValid(mainString, targetStrings) {\n\tif (typeof mainString !== 'string') return false;\n\tif (!Array.isArray(targetStrings)) return false;\n\tif (!targetStrings.length) return false;\n\tif (targetStrings.find( function (s) { return typeof s !== 'string'})) return false;\n\treturn true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc3RyaW5nLXNpbWlsYXJpdHkvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxpQ0FBaUM7QUFDakMsc0RBQXNEOztBQUV0RDtBQUNBLGlCQUFpQixzQkFBc0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQix1QkFBdUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLDBCQUEwQjtBQUMzQztBQUNBO0FBQ0EsZ0JBQWdCLG1EQUFtRDtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLDZCQUE2QjtBQUNyRTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXHNpeWFtXFxEb2N1bWVudHNcXEFJLVBvd2VyZWQtQ2hhdGJvdFxcbm9kZV9tb2R1bGVzXFxzdHJpbmctc2ltaWxhcml0eVxcc3JjXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcblx0Y29tcGFyZVR3b1N0cmluZ3M6Y29tcGFyZVR3b1N0cmluZ3MsXG5cdGZpbmRCZXN0TWF0Y2g6ZmluZEJlc3RNYXRjaFxufTtcblxuZnVuY3Rpb24gY29tcGFyZVR3b1N0cmluZ3MoZmlyc3QsIHNlY29uZCkge1xuXHRmaXJzdCA9IGZpcnN0LnJlcGxhY2UoL1xccysvZywgJycpXG5cdHNlY29uZCA9IHNlY29uZC5yZXBsYWNlKC9cXHMrL2csICcnKVxuXG5cdGlmIChmaXJzdCA9PT0gc2Vjb25kKSByZXR1cm4gMTsgLy8gaWRlbnRpY2FsIG9yIGVtcHR5XG5cdGlmIChmaXJzdC5sZW5ndGggPCAyIHx8IHNlY29uZC5sZW5ndGggPCAyKSByZXR1cm4gMDsgLy8gaWYgZWl0aGVyIGlzIGEgMC1sZXR0ZXIgb3IgMS1sZXR0ZXIgc3RyaW5nXG5cblx0bGV0IGZpcnN0QmlncmFtcyA9IG5ldyBNYXAoKTtcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBmaXJzdC5sZW5ndGggLSAxOyBpKyspIHtcblx0XHRjb25zdCBiaWdyYW0gPSBmaXJzdC5zdWJzdHJpbmcoaSwgaSArIDIpO1xuXHRcdGNvbnN0IGNvdW50ID0gZmlyc3RCaWdyYW1zLmhhcyhiaWdyYW0pXG5cdFx0XHQ/IGZpcnN0QmlncmFtcy5nZXQoYmlncmFtKSArIDFcblx0XHRcdDogMTtcblxuXHRcdGZpcnN0QmlncmFtcy5zZXQoYmlncmFtLCBjb3VudCk7XG5cdH07XG5cblx0bGV0IGludGVyc2VjdGlvblNpemUgPSAwO1xuXHRmb3IgKGxldCBpID0gMDsgaSA8IHNlY29uZC5sZW5ndGggLSAxOyBpKyspIHtcblx0XHRjb25zdCBiaWdyYW0gPSBzZWNvbmQuc3Vic3RyaW5nKGksIGkgKyAyKTtcblx0XHRjb25zdCBjb3VudCA9IGZpcnN0QmlncmFtcy5oYXMoYmlncmFtKVxuXHRcdFx0PyBmaXJzdEJpZ3JhbXMuZ2V0KGJpZ3JhbSlcblx0XHRcdDogMDtcblxuXHRcdGlmIChjb3VudCA+IDApIHtcblx0XHRcdGZpcnN0QmlncmFtcy5zZXQoYmlncmFtLCBjb3VudCAtIDEpO1xuXHRcdFx0aW50ZXJzZWN0aW9uU2l6ZSsrO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiAoMi4wICogaW50ZXJzZWN0aW9uU2l6ZSkgLyAoZmlyc3QubGVuZ3RoICsgc2Vjb25kLmxlbmd0aCAtIDIpO1xufVxuXG5mdW5jdGlvbiBmaW5kQmVzdE1hdGNoKG1haW5TdHJpbmcsIHRhcmdldFN0cmluZ3MpIHtcblx0aWYgKCFhcmVBcmdzVmFsaWQobWFpblN0cmluZywgdGFyZ2V0U3RyaW5ncykpIHRocm93IG5ldyBFcnJvcignQmFkIGFyZ3VtZW50czogRmlyc3QgYXJndW1lbnQgc2hvdWxkIGJlIGEgc3RyaW5nLCBzZWNvbmQgc2hvdWxkIGJlIGFuIGFycmF5IG9mIHN0cmluZ3MnKTtcblx0XG5cdGNvbnN0IHJhdGluZ3MgPSBbXTtcblx0bGV0IGJlc3RNYXRjaEluZGV4ID0gMDtcblxuXHRmb3IgKGxldCBpID0gMDsgaSA8IHRhcmdldFN0cmluZ3MubGVuZ3RoOyBpKyspIHtcblx0XHRjb25zdCBjdXJyZW50VGFyZ2V0U3RyaW5nID0gdGFyZ2V0U3RyaW5nc1tpXTtcblx0XHRjb25zdCBjdXJyZW50UmF0aW5nID0gY29tcGFyZVR3b1N0cmluZ3MobWFpblN0cmluZywgY3VycmVudFRhcmdldFN0cmluZylcblx0XHRyYXRpbmdzLnB1c2goe3RhcmdldDogY3VycmVudFRhcmdldFN0cmluZywgcmF0aW5nOiBjdXJyZW50UmF0aW5nfSlcblx0XHRpZiAoY3VycmVudFJhdGluZyA+IHJhdGluZ3NbYmVzdE1hdGNoSW5kZXhdLnJhdGluZykge1xuXHRcdFx0YmVzdE1hdGNoSW5kZXggPSBpXG5cdFx0fVxuXHR9XG5cdFxuXHRcblx0Y29uc3QgYmVzdE1hdGNoID0gcmF0aW5nc1tiZXN0TWF0Y2hJbmRleF1cblx0XG5cdHJldHVybiB7IHJhdGluZ3M6IHJhdGluZ3MsIGJlc3RNYXRjaDogYmVzdE1hdGNoLCBiZXN0TWF0Y2hJbmRleDogYmVzdE1hdGNoSW5kZXggfTtcbn1cblxuZnVuY3Rpb24gYXJlQXJnc1ZhbGlkKG1haW5TdHJpbmcsIHRhcmdldFN0cmluZ3MpIHtcblx0aWYgKHR5cGVvZiBtYWluU3RyaW5nICE9PSAnc3RyaW5nJykgcmV0dXJuIGZhbHNlO1xuXHRpZiAoIUFycmF5LmlzQXJyYXkodGFyZ2V0U3RyaW5ncykpIHJldHVybiBmYWxzZTtcblx0aWYgKCF0YXJnZXRTdHJpbmdzLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXHRpZiAodGFyZ2V0U3RyaW5ncy5maW5kKCBmdW5jdGlvbiAocykgeyByZXR1cm4gdHlwZW9mIHMgIT09ICdzdHJpbmcnfSkpIHJldHVybiBmYWxzZTtcblx0cmV0dXJuIHRydWU7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/string-similarity/src/index.js\n");

/***/ })

};
;