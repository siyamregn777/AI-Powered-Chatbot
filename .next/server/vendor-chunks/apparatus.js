/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/apparatus";
exports.ids = ["vendor-chunks/apparatus"];
exports.modules = {

/***/ "(rsc)/./node_modules/apparatus/lib/apparatus/classifier/bayes_classifier.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/apparatus/lib/apparatus/classifier/bayes_classifier.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\nCopyright (c) 2011, Chris Umbel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nvar util = __webpack_require__(/*! util */ \"util\"),\nClassifier = __webpack_require__(/*! ./classifier */ \"(rsc)/./node_modules/apparatus/lib/apparatus/classifier/classifier.js\");\n\nvar BayesClassifier = function(smoothing) {\n    Classifier.call(this);\n    this.classFeatures = {};\n    this.classTotals = {};\n    this.totalExamples = 1; // start at one to smooth\n    this.smoothing = smoothing === undefined ? 1.0 : smoothing;\n};\n\nutil.inherits(BayesClassifier, Classifier);\n\nfunction addExample(observation, label) {\n    if(!this.classFeatures[label]) {\n        this.classFeatures[label] = {};\n        this.classTotals[label] = 1; // give an extra for smoothing\n    }\n\n    if(observation instanceof Array) {\n        var i = observation.length;\n        this.totalExamples++;\n        this.classTotals[label]++;\n\n        while(i--) {\n            if(observation[i]) {\n                if(this.classFeatures[label][i]) {\n                    this.classFeatures[label][i]++;\n                } else {\n                    // give an extra for smoothing\n                    this.classFeatures[label][i] = 1 + this.smoothing;\n                }\n            }\n        }\n    } else {\n        // sparse observation\n        for(var key in observation){\n            value = observation[key];\n\n            if(this.classFeatures[label][value]) {\n               this.classFeatures[label][value]++;\n            } else {\n                // give an extra for smoothing\n               this.classFeatures[label][value] = 1 + this.smoothing;\n            }\n        }\n    }\n}\n\nfunction train() {\n\n}\n\nfunction probabilityOfClass(observation, label) {\n    var prob = 0;\n\n    if(observation instanceof Array){\n        var i = observation.length;\n\n        while(i--) {\n            if(observation[i]) {\n                var count = this.classFeatures[label][i] || this.smoothing;\n                // numbers are tiny, add logs rather than take product\n                prob += Math.log(count / this.classTotals[label]);\n            }\n        }\n    } else {\n        // sparse observation\n        for(var key in observation){\n            var count = this.classFeatures[label][observation[key]] || this.smoothing;\n            // numbers are tiny, add logs rather than take product\n            prob += Math.log(count / this.classTotals[label]);\n        }\n    }\n\n    // p(C) * unlogging the above calculation P(X|C)\n    prob = (this.classTotals[label] / this.totalExamples) * Math.exp(prob);\n\n    return prob;\n}\n\nfunction getClassifications(observation) {\n    var classifier = this;\n    var labels = [];\n\n    for(var className in this.classFeatures) {\n        labels.push({label: className,\n        value: classifier.probabilityOfClass(observation, className)});\n    }\n\n    return labels.sort(function(x, y) {\n        return y.value - x.value;\n    });\n}\n\nfunction restore(classifier) {\n     classifier = Classifier.restore(classifier);\n     classifier.__proto__ = BayesClassifier.prototype;\n\n     return classifier;\n}\n\nBayesClassifier.prototype.addExample = addExample;\nBayesClassifier.prototype.train = train;\nBayesClassifier.prototype.getClassifications = getClassifications;\nBayesClassifier.prototype.probabilityOfClass = probabilityOfClass;\n\nBayesClassifier.restore = restore;\n\nmodule.exports = BayesClassifier;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBwYXJhdHVzL2xpYi9hcHBhcmF0dXMvY2xhc3NpZmllci9iYXllc19jbGFzc2lmaWVyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxXQUFXLG1CQUFPLENBQUMsa0JBQU07QUFDekIsYUFBYSxtQkFBTyxDQUFDLDJGQUFjOztBQUVuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHFCQUFxQjtBQUNyQixxRUFBcUU7QUFDckU7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzaXlhbVxcRG9jdW1lbnRzXFxBSS1Qb3dlcmVkLUNoYXRib3RcXG5vZGVfbW9kdWxlc1xcYXBwYXJhdHVzXFxsaWJcXGFwcGFyYXR1c1xcY2xhc3NpZmllclxcYmF5ZXNfY2xhc3NpZmllci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IChjKSAyMDExLCBDaHJpcyBVbWJlbFxuXG5QZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG5vZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG5pbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG50byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG5jb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbmZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cblRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG5hbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cblxuVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG5GSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbkFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbkxJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG5PVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG5USEUgU09GVFdBUkUuXG4qL1xuXG52YXIgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKSxcbkNsYXNzaWZpZXIgPSByZXF1aXJlKCcuL2NsYXNzaWZpZXInKTtcblxudmFyIEJheWVzQ2xhc3NpZmllciA9IGZ1bmN0aW9uKHNtb290aGluZykge1xuICAgIENsYXNzaWZpZXIuY2FsbCh0aGlzKTtcbiAgICB0aGlzLmNsYXNzRmVhdHVyZXMgPSB7fTtcbiAgICB0aGlzLmNsYXNzVG90YWxzID0ge307XG4gICAgdGhpcy50b3RhbEV4YW1wbGVzID0gMTsgLy8gc3RhcnQgYXQgb25lIHRvIHNtb290aFxuICAgIHRoaXMuc21vb3RoaW5nID0gc21vb3RoaW5nID09PSB1bmRlZmluZWQgPyAxLjAgOiBzbW9vdGhpbmc7XG59O1xuXG51dGlsLmluaGVyaXRzKEJheWVzQ2xhc3NpZmllciwgQ2xhc3NpZmllcik7XG5cbmZ1bmN0aW9uIGFkZEV4YW1wbGUob2JzZXJ2YXRpb24sIGxhYmVsKSB7XG4gICAgaWYoIXRoaXMuY2xhc3NGZWF0dXJlc1tsYWJlbF0pIHtcbiAgICAgICAgdGhpcy5jbGFzc0ZlYXR1cmVzW2xhYmVsXSA9IHt9O1xuICAgICAgICB0aGlzLmNsYXNzVG90YWxzW2xhYmVsXSA9IDE7IC8vIGdpdmUgYW4gZXh0cmEgZm9yIHNtb290aGluZ1xuICAgIH1cblxuICAgIGlmKG9ic2VydmF0aW9uIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgICAgdmFyIGkgPSBvYnNlcnZhdGlvbi5sZW5ndGg7XG4gICAgICAgIHRoaXMudG90YWxFeGFtcGxlcysrO1xuICAgICAgICB0aGlzLmNsYXNzVG90YWxzW2xhYmVsXSsrO1xuXG4gICAgICAgIHdoaWxlKGktLSkge1xuICAgICAgICAgICAgaWYob2JzZXJ2YXRpb25baV0pIHtcbiAgICAgICAgICAgICAgICBpZih0aGlzLmNsYXNzRmVhdHVyZXNbbGFiZWxdW2ldKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2xhc3NGZWF0dXJlc1tsYWJlbF1baV0rKztcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBnaXZlIGFuIGV4dHJhIGZvciBzbW9vdGhpbmdcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGFzc0ZlYXR1cmVzW2xhYmVsXVtpXSA9IDEgKyB0aGlzLnNtb290aGluZztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBzcGFyc2Ugb2JzZXJ2YXRpb25cbiAgICAgICAgZm9yKHZhciBrZXkgaW4gb2JzZXJ2YXRpb24pe1xuICAgICAgICAgICAgdmFsdWUgPSBvYnNlcnZhdGlvbltrZXldO1xuXG4gICAgICAgICAgICBpZih0aGlzLmNsYXNzRmVhdHVyZXNbbGFiZWxdW3ZhbHVlXSkge1xuICAgICAgICAgICAgICAgdGhpcy5jbGFzc0ZlYXR1cmVzW2xhYmVsXVt2YWx1ZV0rKztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gZ2l2ZSBhbiBleHRyYSBmb3Igc21vb3RoaW5nXG4gICAgICAgICAgICAgICB0aGlzLmNsYXNzRmVhdHVyZXNbbGFiZWxdW3ZhbHVlXSA9IDEgKyB0aGlzLnNtb290aGluZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuZnVuY3Rpb24gdHJhaW4oKSB7XG5cbn1cblxuZnVuY3Rpb24gcHJvYmFiaWxpdHlPZkNsYXNzKG9ic2VydmF0aW9uLCBsYWJlbCkge1xuICAgIHZhciBwcm9iID0gMDtcblxuICAgIGlmKG9ic2VydmF0aW9uIGluc3RhbmNlb2YgQXJyYXkpe1xuICAgICAgICB2YXIgaSA9IG9ic2VydmF0aW9uLmxlbmd0aDtcblxuICAgICAgICB3aGlsZShpLS0pIHtcbiAgICAgICAgICAgIGlmKG9ic2VydmF0aW9uW2ldKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNvdW50ID0gdGhpcy5jbGFzc0ZlYXR1cmVzW2xhYmVsXVtpXSB8fCB0aGlzLnNtb290aGluZztcbiAgICAgICAgICAgICAgICAvLyBudW1iZXJzIGFyZSB0aW55LCBhZGQgbG9ncyByYXRoZXIgdGhhbiB0YWtlIHByb2R1Y3RcbiAgICAgICAgICAgICAgICBwcm9iICs9IE1hdGgubG9nKGNvdW50IC8gdGhpcy5jbGFzc1RvdGFsc1tsYWJlbF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gc3BhcnNlIG9ic2VydmF0aW9uXG4gICAgICAgIGZvcih2YXIga2V5IGluIG9ic2VydmF0aW9uKXtcbiAgICAgICAgICAgIHZhciBjb3VudCA9IHRoaXMuY2xhc3NGZWF0dXJlc1tsYWJlbF1bb2JzZXJ2YXRpb25ba2V5XV0gfHwgdGhpcy5zbW9vdGhpbmc7XG4gICAgICAgICAgICAvLyBudW1iZXJzIGFyZSB0aW55LCBhZGQgbG9ncyByYXRoZXIgdGhhbiB0YWtlIHByb2R1Y3RcbiAgICAgICAgICAgIHByb2IgKz0gTWF0aC5sb2coY291bnQgLyB0aGlzLmNsYXNzVG90YWxzW2xhYmVsXSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBwKEMpICogdW5sb2dnaW5nIHRoZSBhYm92ZSBjYWxjdWxhdGlvbiBQKFh8QylcbiAgICBwcm9iID0gKHRoaXMuY2xhc3NUb3RhbHNbbGFiZWxdIC8gdGhpcy50b3RhbEV4YW1wbGVzKSAqIE1hdGguZXhwKHByb2IpO1xuXG4gICAgcmV0dXJuIHByb2I7XG59XG5cbmZ1bmN0aW9uIGdldENsYXNzaWZpY2F0aW9ucyhvYnNlcnZhdGlvbikge1xuICAgIHZhciBjbGFzc2lmaWVyID0gdGhpcztcbiAgICB2YXIgbGFiZWxzID0gW107XG5cbiAgICBmb3IodmFyIGNsYXNzTmFtZSBpbiB0aGlzLmNsYXNzRmVhdHVyZXMpIHtcbiAgICAgICAgbGFiZWxzLnB1c2goe2xhYmVsOiBjbGFzc05hbWUsXG4gICAgICAgIHZhbHVlOiBjbGFzc2lmaWVyLnByb2JhYmlsaXR5T2ZDbGFzcyhvYnNlcnZhdGlvbiwgY2xhc3NOYW1lKX0pO1xuICAgIH1cblxuICAgIHJldHVybiBsYWJlbHMuc29ydChmdW5jdGlvbih4LCB5KSB7XG4gICAgICAgIHJldHVybiB5LnZhbHVlIC0geC52YWx1ZTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gcmVzdG9yZShjbGFzc2lmaWVyKSB7XG4gICAgIGNsYXNzaWZpZXIgPSBDbGFzc2lmaWVyLnJlc3RvcmUoY2xhc3NpZmllcik7XG4gICAgIGNsYXNzaWZpZXIuX19wcm90b19fID0gQmF5ZXNDbGFzc2lmaWVyLnByb3RvdHlwZTtcblxuICAgICByZXR1cm4gY2xhc3NpZmllcjtcbn1cblxuQmF5ZXNDbGFzc2lmaWVyLnByb3RvdHlwZS5hZGRFeGFtcGxlID0gYWRkRXhhbXBsZTtcbkJheWVzQ2xhc3NpZmllci5wcm90b3R5cGUudHJhaW4gPSB0cmFpbjtcbkJheWVzQ2xhc3NpZmllci5wcm90b3R5cGUuZ2V0Q2xhc3NpZmljYXRpb25zID0gZ2V0Q2xhc3NpZmljYXRpb25zO1xuQmF5ZXNDbGFzc2lmaWVyLnByb3RvdHlwZS5wcm9iYWJpbGl0eU9mQ2xhc3MgPSBwcm9iYWJpbGl0eU9mQ2xhc3M7XG5cbkJheWVzQ2xhc3NpZmllci5yZXN0b3JlID0gcmVzdG9yZTtcblxubW9kdWxlLmV4cG9ydHMgPSBCYXllc0NsYXNzaWZpZXI7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apparatus/lib/apparatus/classifier/bayes_classifier.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apparatus/lib/apparatus/classifier/classifier.js":
/*!***********************************************************************!*\
  !*** ./node_modules/apparatus/lib/apparatus/classifier/classifier.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("/*\nCopyright (c) 2011, Chris Umbel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nfunction Classifier() {\n}\n\nfunction restore(classifier) {\n    classifier = typeof classifier == 'string' ?  JSON.parse(classifier) : classifier;\n\n    return classifier;\n}\n\nfunction addExample(observation, classification) {\n    throw 'Not implemented';\n}\n\nfunction classify(observation) {\n\tvar classifications = this.getClassifications(observation);\n\tif(!classifications || classifications.length === 0) {\n\t\tthrow \"Not Trained\";\n\t} \n    return classifications[0].label;\n}\n\nfunction train() {\n    throw 'Not implemented';\n}\n\nClassifier.prototype.addExample = addExample;\nClassifier.prototype.train = train;\nClassifier.prototype.classify = classify;\n\nClassifier.restore = restore;\n\nmodule.exports = Classifier;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBwYXJhdHVzL2xpYi9hcHBhcmF0dXMvY2xhc3NpZmllci9jbGFzc2lmaWVyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzaXlhbVxcRG9jdW1lbnRzXFxBSS1Qb3dlcmVkLUNoYXRib3RcXG5vZGVfbW9kdWxlc1xcYXBwYXJhdHVzXFxsaWJcXGFwcGFyYXR1c1xcY2xhc3NpZmllclxcY2xhc3NpZmllci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IChjKSAyMDExLCBDaHJpcyBVbWJlbFxuXG5QZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG5vZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG5pbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG50byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG5jb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbmZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cblRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG5hbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cblxuVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG5GSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbkFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbkxJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG5PVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG5USEUgU09GVFdBUkUuXG4qL1xuXG5mdW5jdGlvbiBDbGFzc2lmaWVyKCkge1xufVxuXG5mdW5jdGlvbiByZXN0b3JlKGNsYXNzaWZpZXIpIHtcbiAgICBjbGFzc2lmaWVyID0gdHlwZW9mIGNsYXNzaWZpZXIgPT0gJ3N0cmluZycgPyAgSlNPTi5wYXJzZShjbGFzc2lmaWVyKSA6IGNsYXNzaWZpZXI7XG5cbiAgICByZXR1cm4gY2xhc3NpZmllcjtcbn1cblxuZnVuY3Rpb24gYWRkRXhhbXBsZShvYnNlcnZhdGlvbiwgY2xhc3NpZmljYXRpb24pIHtcbiAgICB0aHJvdyAnTm90IGltcGxlbWVudGVkJztcbn1cblxuZnVuY3Rpb24gY2xhc3NpZnkob2JzZXJ2YXRpb24pIHtcblx0dmFyIGNsYXNzaWZpY2F0aW9ucyA9IHRoaXMuZ2V0Q2xhc3NpZmljYXRpb25zKG9ic2VydmF0aW9uKTtcblx0aWYoIWNsYXNzaWZpY2F0aW9ucyB8fCBjbGFzc2lmaWNhdGlvbnMubGVuZ3RoID09PSAwKSB7XG5cdFx0dGhyb3cgXCJOb3QgVHJhaW5lZFwiO1xuXHR9IFxuICAgIHJldHVybiBjbGFzc2lmaWNhdGlvbnNbMF0ubGFiZWw7XG59XG5cbmZ1bmN0aW9uIHRyYWluKCkge1xuICAgIHRocm93ICdOb3QgaW1wbGVtZW50ZWQnO1xufVxuXG5DbGFzc2lmaWVyLnByb3RvdHlwZS5hZGRFeGFtcGxlID0gYWRkRXhhbXBsZTtcbkNsYXNzaWZpZXIucHJvdG90eXBlLnRyYWluID0gdHJhaW47XG5DbGFzc2lmaWVyLnByb3RvdHlwZS5jbGFzc2lmeSA9IGNsYXNzaWZ5O1xuXG5DbGFzc2lmaWVyLnJlc3RvcmUgPSByZXN0b3JlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENsYXNzaWZpZXI7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apparatus/lib/apparatus/classifier/classifier.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apparatus/lib/apparatus/classifier/logistic_regression_classifier.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/apparatus/lib/apparatus/classifier/logistic_regression_classifier.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\nCopyright (c) 2011, Chris Umbel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nvar util = __webpack_require__(/*! util */ \"util\"),\n     Classifier = __webpack_require__(/*! ./classifier */ \"(rsc)/./node_modules/apparatus/lib/apparatus/classifier/classifier.js\");\n\nvar sylvester = __webpack_require__(/*! sylvester */ \"(rsc)/./node_modules/sylvester/lib/node-sylvester/index.js\"),\nMatrix = sylvester.Matrix,\nVector = sylvester.Vector;\n\nfunction sigmoid(z) {\n    return 1 / (1 + Math.exp(0 - z));\n}\n\nfunction hypothesis(theta, Observations) {\n    return Observations.x(theta).map(sigmoid);\n}\n\nfunction cost(theta, Examples, classifications) {\n    var hypothesisResult = hypothesis(theta, Examples);\n\n    var ones = Vector.One(Examples.rows());\n    var cost_1 = Vector.Zero(Examples.rows()).subtract(classifications).elementMultiply(hypothesisResult.log());\n    var cost_0 = ones.subtract(classifications).elementMultiply(ones.subtract(hypothesisResult).log());\n\n    return (1 / Examples.rows()) * cost_1.subtract(cost_0).sum();\n}\n\nfunction descendGradient(theta, Examples, classifications) {\n    var maxIt = 500 * Examples.rows();\n    var last;\n    var current;\n    var learningRate = 3;\n    var learningRateFound = false;\n\n    Examples = Matrix.One(Examples.rows(), 1).augment(Examples);\n    theta = theta.augment([0]);\n\n    while(!learningRateFound && learningRate !== 0) {\n        var i = 0;\n        last = null;\n\n        while(true) {\n            var hypothesisResult = hypothesis(theta, Examples);\n            theta = theta.subtract(Examples.transpose().x(\n            hypothesisResult.subtract(classifications)).x(1 / Examples.rows()).x(learningRate));\n            current = cost(theta, Examples, classifications);\n\n            i++;\n\n            if(last) {\n            if(current < last)\n                learningRateFound = true;\n            else\n                break;\n\n            if(last - current < 0.0001)\n                break;\n            }\n\n            if(i >= maxIt) {\n                throw 'unable to find minimum';\n            }\n\n            last = current;\n        }\n\n        learningRate /= 3;\n    }\n\n    return theta.chomp(1);\n}\n\nvar LogisticRegressionClassifier = function() {\n    Classifier.call(this);\n    this.examples = {};\n    this.features = [];\n    this.featurePositions = {};\n    this.maxFeaturePosition = 0;\n    this.classifications = [];\n    this.exampleCount = 0;\n};\n\nutil.inherits(LogisticRegressionClassifier, Classifier);\n\nfunction createClassifications() {\n    var classifications = [];\n\n    for(var i = 0; i < this.exampleCount; i++) {\n        var classification = [];\n\n        for(var _ in this.examples) {\n            classification.push(0);\n        }\n\n       classifications.push(classification);\n    }\n\n    return classifications;\n}\n\nfunction computeThetas(Examples, Classifications) {\n    this.theta = [];\n\n    // each class will have it's own theta.\n    var zero = function() { return 0; };\n    for(var i = 1; i <= this.classifications.length; i++) {\n        var theta = Examples.row(1).map(zero);\n        this.theta.push(descendGradient(theta, Examples, Classifications.column(i)));\n    }\n}\n\nfunction train() {\n    var examples = [];\n    var classifications = this.createClassifications();\n    var d = 0, c = 0;\n\n    for(var classification in this.examples) {\n        for(var i = 0; i < this.examples[classification].length; i++) {\n            var doc = this.examples[classification][i];\n            var example = doc;\n\n            examples.push(example);\n            classifications[d][c] = 1;\n            d++;\n        }\n\n        c++;\n    }\n\n    this.computeThetas($M(examples), $M(classifications));\n}\n\nfunction addExample(data, classification) {\n    if(!this.examples[classification]) {\n\tthis.examples[classification] = [];\n\tthis.classifications.push(classification);\n    }\n\n    this.examples[classification].push(data);\n    this.exampleCount++;\n}\n\nfunction getClassifications(observation) {\n    observation = $V(observation);\n    var classifications = [];\n\n    for(var i = 0; i < this.theta.length; i++) {\n        classifications.push({label: this.classifications[i], value: sigmoid(observation.dot(this.theta[i])) });\n    }\n\n    return classifications.sort(function(x, y) {\n        return y.value - x.value;\n    });\n}\n\nfunction restore(classifier) {\n    classifier = Classifier.restore(classifier);\n    classifier.__proto__ = LogisticRegressionClassifier.prototype;\n\n    return classifier;\n}\n\nLogisticRegressionClassifier.prototype.addExample = addExample;\nLogisticRegressionClassifier.prototype.restore = restore;\nLogisticRegressionClassifier.prototype.train = train;\nLogisticRegressionClassifier.prototype.createClassifications = createClassifications;\nLogisticRegressionClassifier.prototype.computeThetas = computeThetas;\nLogisticRegressionClassifier.prototype.getClassifications = getClassifications;\n\nLogisticRegressionClassifier.restore = restore;\n\nmodule.exports = LogisticRegressionClassifier;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apparatus/lib/apparatus/classifier/logistic_regression_classifier.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apparatus/lib/apparatus/clusterer/kmeans.js":
/*!******************************************************************!*\
  !*** ./node_modules/apparatus/lib/apparatus/clusterer/kmeans.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\nCopyright (c) 2011, Chris Umbel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nvar Sylvester = __webpack_require__(/*! sylvester */ \"(rsc)/./node_modules/sylvester/lib/node-sylvester/index.js\"),\nMatrix = Sylvester.Matrix,\nVector = Sylvester.Vector;\n\nfunction KMeans(Observations) {\n    if(!Observations.elements)\n    Observations = $M(Observations);\n\n    this.Observations = Observations;\n}\n\n// create an initial centroid matrix with initial values between\n// 0 and the max of feature data X.\nfunction createCentroids(k) {\n    var Centroid = [];\n    var maxes = this.Observations.maxColumns();\n    //console.log(maxes);\n\n    for(var i = 1; i <= k; i++) {\n        var centroid = [];\n        for(var j = 1; j <= this.Observations.cols(); j++) {\n            centroid.push(Math.random() * maxes.e(j));\n        }\n\n        Centroid.push(centroid);\n    }\n\n    //console.log(centroid)\n\n    return $M(Centroid);\n}\n\n// get the euclidian distance between the feature data X and\n// a given centroid matrix C.\nfunction distanceFrom(Centroids) {\n    var distances = [];\n\n    for(var i = 1; i <= this.Observations.rows(); i++) {\n        var distance = [];\n\n        for(var j = 1; j <= Centroids.rows(); j++) {\n            distance.push(this.Observations.row(i).distanceFrom(Centroids.row(j)));\n        }\n\n        distances.push(distance);\n    }\n\n    return $M(distances);\n}\n\n// categorize the feature data X into k clusters. return a vector\n// containing the results.\nfunction cluster(k) {\n    var Centroids = this.createCentroids(k);\n    var LastDistances = Matrix.Zero(this.Observations.rows(), this.Observations.cols());\n    var Distances = this.distanceFrom(Centroids);\n    var Groups;\n\n    while(!(LastDistances.eql(Distances))) {\n    Groups = Distances.minColumnIndexes();\n    LastDistances = Distances;\n\n    var newCentroids = [];\n\n    for(var i = 1; i <= Centroids.rows(); i++) {\n        var centroid = [];\n\n        for(var j = 1; j <= Centroids.cols(); j++) {\n        var sum = 0;\n        var count = 0;\n\n        for(var l = 1; l <= this.Observations.rows(); l++) {\n            if(Groups.e(l) == i) {\n            count++;\n            sum += this.Observations.e(l, j);\n            }\n        }\n\n        centroid.push(sum / count);\n        }\n\n        newCentroids.push(centroid);\n    }\n\n    Centroids = $M(newCentroids);\n    Distances = this.distanceFrom(Centroids);\n    }\n\n    return Groups;\n}\n\nKMeans.prototype.createCentroids = createCentroids;\nKMeans.prototype.distanceFrom = distanceFrom;\nKMeans.prototype.cluster = cluster;\n\nmodule.exports = KMeans;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBwYXJhdHVzL2xpYi9hcHBhcmF0dXMvY2x1c3RlcmVyL2ttZWFucy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZ0JBQWdCLG1CQUFPLENBQUMsNkVBQVc7QUFDbkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbUJBQW1CLFFBQVE7QUFDM0I7QUFDQSx1QkFBdUIsK0JBQStCO0FBQ3REO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQiwrQkFBK0I7QUFDbEQ7O0FBRUEsdUJBQXVCLHVCQUF1QjtBQUM5QztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsbUJBQW1CLHVCQUF1QjtBQUMxQzs7QUFFQSx1QkFBdUIsdUJBQXVCO0FBQzlDO0FBQ0E7O0FBRUEsdUJBQXVCLCtCQUErQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc2l5YW1cXERvY3VtZW50c1xcQUktUG93ZXJlZC1DaGF0Ym90XFxub2RlX21vZHVsZXNcXGFwcGFyYXR1c1xcbGliXFxhcHBhcmF0dXNcXGNsdXN0ZXJlclxca21lYW5zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgKGMpIDIwMTEsIENocmlzIFVtYmVsXG5cblBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbm9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbmluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbnRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbmNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcblxuVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbmFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuXG5USEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG5JTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbkZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbk9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cblRIRSBTT0ZUV0FSRS5cbiovXG5cbnZhciBTeWx2ZXN0ZXIgPSByZXF1aXJlKCdzeWx2ZXN0ZXInKSxcbk1hdHJpeCA9IFN5bHZlc3Rlci5NYXRyaXgsXG5WZWN0b3IgPSBTeWx2ZXN0ZXIuVmVjdG9yO1xuXG5mdW5jdGlvbiBLTWVhbnMoT2JzZXJ2YXRpb25zKSB7XG4gICAgaWYoIU9ic2VydmF0aW9ucy5lbGVtZW50cylcbiAgICBPYnNlcnZhdGlvbnMgPSAkTShPYnNlcnZhdGlvbnMpO1xuXG4gICAgdGhpcy5PYnNlcnZhdGlvbnMgPSBPYnNlcnZhdGlvbnM7XG59XG5cbi8vIGNyZWF0ZSBhbiBpbml0aWFsIGNlbnRyb2lkIG1hdHJpeCB3aXRoIGluaXRpYWwgdmFsdWVzIGJldHdlZW5cbi8vIDAgYW5kIHRoZSBtYXggb2YgZmVhdHVyZSBkYXRhIFguXG5mdW5jdGlvbiBjcmVhdGVDZW50cm9pZHMoaykge1xuICAgIHZhciBDZW50cm9pZCA9IFtdO1xuICAgIHZhciBtYXhlcyA9IHRoaXMuT2JzZXJ2YXRpb25zLm1heENvbHVtbnMoKTtcbiAgICAvL2NvbnNvbGUubG9nKG1heGVzKTtcblxuICAgIGZvcih2YXIgaSA9IDE7IGkgPD0gazsgaSsrKSB7XG4gICAgICAgIHZhciBjZW50cm9pZCA9IFtdO1xuICAgICAgICBmb3IodmFyIGogPSAxOyBqIDw9IHRoaXMuT2JzZXJ2YXRpb25zLmNvbHMoKTsgaisrKSB7XG4gICAgICAgICAgICBjZW50cm9pZC5wdXNoKE1hdGgucmFuZG9tKCkgKiBtYXhlcy5lKGopKTtcbiAgICAgICAgfVxuXG4gICAgICAgIENlbnRyb2lkLnB1c2goY2VudHJvaWQpO1xuICAgIH1cblxuICAgIC8vY29uc29sZS5sb2coY2VudHJvaWQpXG5cbiAgICByZXR1cm4gJE0oQ2VudHJvaWQpO1xufVxuXG4vLyBnZXQgdGhlIGV1Y2xpZGlhbiBkaXN0YW5jZSBiZXR3ZWVuIHRoZSBmZWF0dXJlIGRhdGEgWCBhbmRcbi8vIGEgZ2l2ZW4gY2VudHJvaWQgbWF0cml4IEMuXG5mdW5jdGlvbiBkaXN0YW5jZUZyb20oQ2VudHJvaWRzKSB7XG4gICAgdmFyIGRpc3RhbmNlcyA9IFtdO1xuXG4gICAgZm9yKHZhciBpID0gMTsgaSA8PSB0aGlzLk9ic2VydmF0aW9ucy5yb3dzKCk7IGkrKykge1xuICAgICAgICB2YXIgZGlzdGFuY2UgPSBbXTtcblxuICAgICAgICBmb3IodmFyIGogPSAxOyBqIDw9IENlbnRyb2lkcy5yb3dzKCk7IGorKykge1xuICAgICAgICAgICAgZGlzdGFuY2UucHVzaCh0aGlzLk9ic2VydmF0aW9ucy5yb3coaSkuZGlzdGFuY2VGcm9tKENlbnRyb2lkcy5yb3coaikpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGRpc3RhbmNlcy5wdXNoKGRpc3RhbmNlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gJE0oZGlzdGFuY2VzKTtcbn1cblxuLy8gY2F0ZWdvcml6ZSB0aGUgZmVhdHVyZSBkYXRhIFggaW50byBrIGNsdXN0ZXJzLiByZXR1cm4gYSB2ZWN0b3Jcbi8vIGNvbnRhaW5pbmcgdGhlIHJlc3VsdHMuXG5mdW5jdGlvbiBjbHVzdGVyKGspIHtcbiAgICB2YXIgQ2VudHJvaWRzID0gdGhpcy5jcmVhdGVDZW50cm9pZHMoayk7XG4gICAgdmFyIExhc3REaXN0YW5jZXMgPSBNYXRyaXguWmVybyh0aGlzLk9ic2VydmF0aW9ucy5yb3dzKCksIHRoaXMuT2JzZXJ2YXRpb25zLmNvbHMoKSk7XG4gICAgdmFyIERpc3RhbmNlcyA9IHRoaXMuZGlzdGFuY2VGcm9tKENlbnRyb2lkcyk7XG4gICAgdmFyIEdyb3VwcztcblxuICAgIHdoaWxlKCEoTGFzdERpc3RhbmNlcy5lcWwoRGlzdGFuY2VzKSkpIHtcbiAgICBHcm91cHMgPSBEaXN0YW5jZXMubWluQ29sdW1uSW5kZXhlcygpO1xuICAgIExhc3REaXN0YW5jZXMgPSBEaXN0YW5jZXM7XG5cbiAgICB2YXIgbmV3Q2VudHJvaWRzID0gW107XG5cbiAgICBmb3IodmFyIGkgPSAxOyBpIDw9IENlbnRyb2lkcy5yb3dzKCk7IGkrKykge1xuICAgICAgICB2YXIgY2VudHJvaWQgPSBbXTtcblxuICAgICAgICBmb3IodmFyIGogPSAxOyBqIDw9IENlbnRyb2lkcy5jb2xzKCk7IGorKykge1xuICAgICAgICB2YXIgc3VtID0gMDtcbiAgICAgICAgdmFyIGNvdW50ID0gMDtcblxuICAgICAgICBmb3IodmFyIGwgPSAxOyBsIDw9IHRoaXMuT2JzZXJ2YXRpb25zLnJvd3MoKTsgbCsrKSB7XG4gICAgICAgICAgICBpZihHcm91cHMuZShsKSA9PSBpKSB7XG4gICAgICAgICAgICBjb3VudCsrO1xuICAgICAgICAgICAgc3VtICs9IHRoaXMuT2JzZXJ2YXRpb25zLmUobCwgaik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjZW50cm9pZC5wdXNoKHN1bSAvIGNvdW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIG5ld0NlbnRyb2lkcy5wdXNoKGNlbnRyb2lkKTtcbiAgICB9XG5cbiAgICBDZW50cm9pZHMgPSAkTShuZXdDZW50cm9pZHMpO1xuICAgIERpc3RhbmNlcyA9IHRoaXMuZGlzdGFuY2VGcm9tKENlbnRyb2lkcyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIEdyb3Vwcztcbn1cblxuS01lYW5zLnByb3RvdHlwZS5jcmVhdGVDZW50cm9pZHMgPSBjcmVhdGVDZW50cm9pZHM7XG5LTWVhbnMucHJvdG90eXBlLmRpc3RhbmNlRnJvbSA9IGRpc3RhbmNlRnJvbTtcbktNZWFucy5wcm90b3R5cGUuY2x1c3RlciA9IGNsdXN0ZXI7XG5cbm1vZHVsZS5leHBvcnRzID0gS01lYW5zO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apparatus/lib/apparatus/clusterer/kmeans.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/apparatus/lib/apparatus/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/apparatus/lib/apparatus/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.BayesClassifier = __webpack_require__(/*! ./classifier/bayes_classifier */ \"(rsc)/./node_modules/apparatus/lib/apparatus/classifier/bayes_classifier.js\");\nexports.LogisticRegressionClassifier = __webpack_require__(/*! ./classifier/logistic_regression_classifier */ \"(rsc)/./node_modules/apparatus/lib/apparatus/classifier/logistic_regression_classifier.js\");\nexports.KMeans = __webpack_require__(/*! ./clusterer/kmeans */ \"(rsc)/./node_modules/apparatus/lib/apparatus/clusterer/kmeans.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXBwYXJhdHVzL2xpYi9hcHBhcmF0dXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUNBLGlLQUFrRTtBQUNsRSwwTUFBNkY7QUFDN0Ysa0lBQThDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXHNpeWFtXFxEb2N1bWVudHNcXEFJLVBvd2VyZWQtQ2hhdGJvdFxcbm9kZV9tb2R1bGVzXFxhcHBhcmF0dXNcXGxpYlxcYXBwYXJhdHVzXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydHMuQmF5ZXNDbGFzc2lmaWVyID0gcmVxdWlyZSgnLi9jbGFzc2lmaWVyL2JheWVzX2NsYXNzaWZpZXInKTtcbmV4cG9ydHMuTG9naXN0aWNSZWdyZXNzaW9uQ2xhc3NpZmllciA9IHJlcXVpcmUoJy4vY2xhc3NpZmllci9sb2dpc3RpY19yZWdyZXNzaW9uX2NsYXNzaWZpZXInKTtcbmV4cG9ydHMuS01lYW5zID0gcmVxdWlyZSgnLi9jbHVzdGVyZXIva21lYW5zJyk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/apparatus/lib/apparatus/index.js\n");

/***/ })

};
;